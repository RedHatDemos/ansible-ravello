---
# my-project-app.yml

- name: provision ocp example app
  tags:
    - provision
  hosts: localhost
  vars:
   # This variable is used by the ravello-provision-app role
   # to determine the application name
    - application_name: ocp.example.app
  # For baremetal
    - publish_optimization: performance
    - publish_region: us-east-5
  vars_files:
    # for setting root and user passwords
    - workdir/secrets.yml
  tasks:
   # This role provisions a new application in ravello
    - include_role:
        name: ravello-provision-app


- name: enable repositories
  become: true
  hosts: all
  vars_files:
    # rhn credentials
    - workdir/secrets.yml
  vars:
  tasks:
    - include_role: 
        name: set-repositories


- name: configure installed software and reboot
  become: true
  hosts: all
  tasks:
    - name: update existing packages
      yum:
        name: "*"
        state: latest
    - name: reboot after system update
      include_role: 
        name: reboot-host
    - name: install required packages
      yum:
        name: "{{ item }}"
        state: latest
      with_items: "{{ common_packages + openshift_packages }}"


- name: Install and configure docker for OSP
  tags:
    - docker
  hosts:
    - master
    - ocp_nodes
  become: true
  tasks:
    - name: install docker
      yum:
        name: docker
        state: latest
    - lineinfile:
        dest: /etc/sysconfig/docker-storage-setup
        line: 'DEVS=/dev/vdb'
    - lineinfile:
        dest: /etc/sysconfig/docker-storage-setup
        line: 'VG=docker-vg'
    - name: Create docker storage
      systemd:
        state: started
        enabled: yes
        name: docker-storage-setup
    - name: Enable and start docker
      systemd:
        state: started
        enabled: yes
        name: docker


- name: copy authorized keys to root
  hosts: 
    - workstation
    - master
    - ocp_nodes
  become: true
  tags:
    - ssh_keys
  tasks:
    - copy: 
        src: "/home/{{ ansible_user }}/.ssh/authorized_keys"
        dest: /root/.ssh/authorized_keys
        remote_src: True


- name: copy private key to master
  hosts: master
  become: true
  tags:
    - ssh_keys
  tasks:
    - copy: 
        src: "{{ ansible_ssh_private_key_file }}"
        dest: /home/{{ ansible_user }}/.ssh/id_rsa 
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0600
    - copy: 
        src: "{{ ansible_ssh_private_key_file }}"
        dest: /root/.ssh/id_rsa 
        owner: "root"
        group: "root"
        mode: 0600


- name: deploy OCP from workstation
  hosts: workstation
  tags:
    - deploy_ocp
  become: true
  tasks:
    - name: copy openshift-ansible
      copy: 
        src: "files/openshift-ansible"
        dest: "/home/{{ ansible_user }}"
    - copy: 
        src: "{{ ansible_ssh_private_key_file }}"
        dest: /root/.ssh/id_rsa 
        owner: "root"
        group: "root"
        mode: 0600
    - name: run openshift-ansible install
      command: >
          ansible-playbook -i inventory 
          /usr/share/ansible/openshift-ansible/playbooks/prerequisites.yml
      args:
        chdir: /home/{{ ansible_user }}/openshift-ansible
    - name: run openshift-ansible install
      command: >
          ansible-playbook -i inventory 
          /usr/share/ansible/openshift-ansible/playbooks/deploy_cluster.yml
      args:
        chdir: /home/{{ ansible_user }}/openshift-ansible

- name: configure ocp master node
  hosts: master
  become: true
  tags:
    - master_cfg
  vars_files:
    - workdir/secrets.yml
  tasks:
    - command: htpasswd -bc /etc/origin/master/htpasswd admin {{ new_ocp_password }}
    - copy: 
        src: "files/publicurl/fixpublicurl.service"
        dest: "/etc/systemd/system/fixpublicurl.service"
    - get_url: 
        url: "https://gist.githubusercontent.com/pericnenad/76f05a737413946addcdb03fea4e49c4/raw/b743b3c60f1c58e31a62c469dec7f6323dfd95f7/update_publicURL.sh"
        dest: "/usr/local/bin/update_publicURL.sh"
        mode: a+x
    - name: Enable and start fixpublicurl
      systemd:
        enabled: yes
        state: started
        name: fixpublicurl
    - wait_for: 
        host: "{{ inventory_hostname }}"
        port: 8053
    - name: get openshift token name
      shell: "oc -n management-infra get secrets | grep admin-token | tail -1 | cut -d' ' -f1"
      register: oc_token_name
    - name: save openshift token
      shell: "oc -n management-infra get secrets {{ oc_token_name.stdout }} --template='{{ '{{'  }}.data.token {{ '}}' }}' | base64 -d"
      register: oc_token_output 
    - set_fact: 
        oc_token
    - debug:
        var: oc_token_output.stdout

- name: Copy ocp token to bastion
  hosts: workstation
  become: true
  tags:
    - bastion_ocp_token
  tasks:
    - copy:
        content: "{{ hostvars['master.example.com']['oc_token_output']['stdout'] }}"
        dest: /root/ocp.token

