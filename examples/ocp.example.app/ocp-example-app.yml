---
# my-project-app.yml

- name: provision ocp example app
  hosts: localhost
  vars:
   # This variable is used by the ravello-provision-app role
   # to determine the application name
    - application_name: ocp.example.app
  tasks:
   # This role provisions a new application in ravello
    - include_role:
        name: ravello-provision-app


- name: enable repositories
  become: true
  hosts: all
  vars_files:
    # rhn credentials
    - workdir/credentials.yml
  vars:
  tasks:
    - include_role: 
        name: set-repositories


- name: configure installed software and reboot
  become: true
  hosts: all
  tasks:
    - name: update existing packages
      yum:
        name: "*"
        state: latest
    - name: reboot after system update
      include_role: 
        name: reboot-host
    - name: install required packages
      yum:
        name: "{{ item }}"
        state: latest
      with_items: "{{ common_packages + openshift_packages }}"


- name: Install and configure docker for OSP
  tags:
    - docker
  hosts:
    - master
    - ocp_nodes
  become: true
  tasks:
    - name: install docker
      yum:
        name: docker-1.12.6
        state: latest
    - lineinfile:
        dest: /etc/sysconfig/docker
        regexp: '^OPTIONS=*'
        line: 'OPTIONS="--selinux-enabled --insecure-registry 172.30.0.0/16"'
    - lineinfile:
        dest: /etc/sysconfig/docker-storage-setup
        line: 'DEVS=/dev/vdb'
    - lineinfile:
        dest: /etc/sysconfig/docker-storage-setup
        line: 'VG=docker-vg'
    - name: Enable and start docker
      systemd:
        state: started
        enabled: yes
        name: docker


- name: copy authorized keys to root
  hosts: 
    - workstation
    - master
    - ocp_nodes
  become: true
  tags:
    - ssh_keys
  tasks:
    - copy: 
        src: "/home/{{ ansible_user }}/.ssh/authorized_keys"
        dest: /root/.ssh/authorized_keys
        remote_src: True


- name: copy private key to master
  hosts: master
  become: true
  tags:
    - ssh_keys
  tasks:
    - copy: 
        src: "{{ ansible_ssh_private_key_file }}"
        dest: /home/{{ ansible_user }}/.ssh/id_rsa 
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: 0600
    - copy: 
        src: "{{ ansible_ssh_private_key_file }}"
        dest: /root/.ssh/id_rsa 
        owner: "root"
        group: "root"
        mode: 0600


- name: deploy OCP from workstation
  hosts: workstation
  tags:
    - deploy_ocp
  become: true
  tasks:
    - file:
        path: /var/named
        state: directory
    - name: copy named.conf
      copy: 
        src: "files/named/named.conf"
        dest: "/etc/named.conf"
    - name: copy named zone files
      copy: 
        src: "files/named/{{ item }}"
        dest: "/var/named/{{ item }}"
      with_items:
        - 0.168.192.in-addr.arpa
        - apps.example.com.zone
        - example.com.zone
    - name: Enable and start named.service
      systemd:
        state: started
        enabled: yes
        name: named
    - name: copy haproxy.cfg
      copy: 
        src: "files/haproxy/haproxy.cfg"
        dest: "/etc/haproxy"
    - name: copy fixhaproxy.service
      copy: 
        src: "files/haproxy/fixhaproxy.service"
        dest: "/etc/systemd/system/fixhaproxy.service"
    - name: copy update_HAProxy.sh
      copy: 
        src: "files/haproxy/update_HAProxy.sh"
        dest: "/usr/local/bin/update_HAProxy.sh"
        mode: a+x
    - lineinfile:
        dest: /etc/NetworkManager/NetworkManager.conf
        insertafter: '^.main.'
        line: 'dns=none'
    - name: Restart named.service
      systemd:
        state: restarted
        enabled: yes
        name: named
    - name: restart NetworkManager
      systemd:
        state: restarted
        name: NetworkManager
    - copy:
        content: |
          search localdomain srv.ravcloud.com example.com
          nameserver 192.168.0.1 # Ravello Internal DNS Server.
          nameserver 192.168.0.5 # Bastion DNS Server
        dest: /etc/resolv.conf
    - name: copy openshift-ansible
      copy: 
        src: "files/openshift-ansible"
        dest: "/home/{{ ansible_user }}"
    - copy: 
        src: "{{ ansible_ssh_private_key_file }}"
        dest: /root/.ssh/id_rsa 
        owner: "root"
        group: "root"
        mode: 0600
    - name: run openshift-ansible install
      command: >
          ansible-playbook -i inventory 
          /usr/share/ansible/openshift-ansible/playbooks/byo/config.yml
      args:
        chdir: /home/{{ ansible_user }}/openshift-ansible
