---

- name: wait for ssh proxies to be available
  wait_for:
    port: 22
    host: "{{ item.externalFqdn }}"
    search_regex: OpenSSH
    delay: 30
  with_items: "{{ hostvars.values() | list }}"
  when: (item.hostnameIsProxy is defined) and (item.hostnameIsProxy)

- name: copy private key to proxies
  shell: >
    scp -i {{ ssh_key_path }} {{ ssh_key_path }} 
    {{ item.ansible_user }}@{{ item.externalFqdn }}:~/.ssh/id_rsa
  with_items: "{{ hostvars.values() | list }}"
  when: (item.hostnameIsProxy is defined) and (item.hostnameIsProxy)

- name: wait for host availability via proxy
  wait_for:
    port: 22
    host: "{{ item.inventory_hostname }}"
    search_regex: OpenSSH
    delay: 30
  delegate_to: "{{ item.proxyFqdn }}"
  with_items: "{{ hostvars.values() | list }}"
  when: (item.hostnameIsProxy is defined) and (not item.hostnameIsProxy)

- name: configure root password
  block:
    - name: register hashed password
      command: openssl passwd {{ new_root_password }}
      register: hashed_root_pw
      when: new_root_password is defined
    - name: set passwords
      become: true
      command: usermod -p {{ hashed_root_pw.stdout }} root
      delegate_to: "{{ item.inventory_hostname }}"
      when: new_root_password is defined and (item.hostnameIsProxy is defined) and (not item.hostnameIsProxy)
      with_items: "{{ hostvars.values() | list }}"
  no_log: true


- name: configure user password
  block:
    - name: register hashed password
      command: openssl passwd {{ new_user_password }}
      register: hashed_user_pw
      when: new_user_password is defined
    - name: set passwords
      become: true
      command: usermod -p {{ hashed_user_pw.stdout }} {{ ansible_user }}
      delegate_to: "{{ item.inventory_hostname }}"
      when: new_user_password is defined and (item.hostnameIsProxy is defined) and (not item.hostnameIsProxy)
      with_items: "{{ hostvars.values() | list }}"
  no_log: true
